#+TITLE: Emacs config

* Basic Settings
** Defaults
#+BEGIN_SRC emacs-lisp
  (setq scroll-conservatively 100)  ;; scroll line by line

  ;; autosave
  ;; (setq make-backup-file nil)
  ;; (setq auto-save-default nil)

  (when window-system (global-hl-line-mode t))          ;; easy cursor
  (when window-system (global-prettify-symbols-mode t)) ;; lambda etc looks nice

  (tool-bar-mode -1)
  (menu-bar-mode -1)
  (scroll-bar-mode -1)

  (setq inhibit-startup-message t)

  ;; (setq package-enable-at-startup nil)  ;; disable package.el in favor of elpaca
#+END_SRC
* Evil
** Base Install
#+BEGIN_SRC emacs-lisp
  ;; download/install evil mode

  ;; Manual install
  ;; (unless (package-installed-p 'evil)
  ;;   (package-install 'evil))

  ;; enable Evil
  ;; (setq evil-want-C-i-jump nil)  ;; Fix org-mode Tab
  ;; (require 'evil)
  ;; (evil-mode 1)

  ;; use-package
  (use-package evil
    :ensure t
    :init
    (setq evil-want-integration t) ;; optional since defaulted true
    (setq evil-want-keybinding nil)
    :config
    (evil-mode 1))
#+END_SRC
** Evil Collection
#+BEGIN_SRC emacs-lisp
  ;; Evil Collection
  ;; Default bindings to evil mode
  (use-package evil-collection
    :after evil
    :ensure t
    :config
    (evil-collection-init))
#+END_SRC
* Misc Packages 
** which-key
#+BEGIN_SRC emacs-lisp
  ;; Improve key-binding help
  (use-package which-key
    :ensure t
    :init
    (which-key-mode))
#+END_SRC
** beacon
#+BEGIN_SRC emacs-lisp
  ;; Improve cursor visibility
  (use-package beacon
    :ensure t
    :init
    (beacon-mode 1))
#+END_SRC
* ORG
** Pretty bullets
#+BEGIN_SRC emacs-lisp
  (use-package org-bullets
    :ensure t
    :config
    (add-hook 'org-mode-hook (lambda () (org-bullets-mode))))
#+END_SRC
* HELM
** Install
#+begin_src emacs-lisp
  ;; install helm
  (use-package helm
    :ensure t
    :bind
    (("M-x"     . 'helm-M-x)
     ("C-x C-f" . 'helm-find-files)
     ("C-x C-b" . 'helm-buffers-list))
    )

#+end_src
* Magit
** Install
#+begin_src emacs-lisp
  ;; install magit
  (use-package magit
    :ensure t
    )
#+end_src
* Python
** tmp
#+begin_src emacs-lisp
  (setq python-shell-interpreter "C:\\Users\\Deron\\AppData\\Local\\Programs\\Python\\Python313\\python.exe")

#+end_src
